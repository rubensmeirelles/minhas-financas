{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class HttpBaseService {\n  constructor(injector) {\n    this.injector = injector;\n    this.apiBase = 'http://localhost:3000/';\n    if (injector == null || injector == undefined) {\n      throw new Error('Injector não pode ser nulo.');\n    }\n    this.httpClient = injector.get(HttpClient);\n  }\n  httpGet(endpoint) {\n    return this.httpClient.get(`${this.apiBase}${endpoint}`);\n  }\n  httpPost(endpoint, dados) {\n    return this.httpClient.post(`${this.apiBase}${endpoint}`, dados);\n  }\n  httpPut(endpoint, dados) {\n    return this.httpClient.put(`${this.apiBase}${endpoint}`, dados);\n  }\n  httpDelete(endpoint) {\n    return this.httpClient.delete(`${this.apiBase}${endpoint}`);\n  }\n}\nHttpBaseService.ɵfac = function HttpBaseService_Factory(t) {\n  return new (t || HttpBaseService)(i0.ɵɵinject(i0.Injector));\n};\nHttpBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpBaseService,\n  factory: HttpBaseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;;AAOjD,OAAM,MAAOC,eAAe;EAM1BC,YAA+BC,QAAkB;IAAlB,aAAQ,GAARA,QAAQ;IAF/B,YAAO,GAAG,wBAAwB;IAGxC,IAAIA,QAAQ,IAAI,IAAI,IAAIA,QAAQ,IAAIC,SAAS,EAAE;MAC7C,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;;IAEhD,IAAI,CAACC,UAAU,GAAGH,QAAQ,CAACI,GAAG,CAACP,UAAU,CAAC;EAC5C;EAEUQ,OAAO,CAACC,QAAgB;IAChC,OAAO,IAAI,CAACH,UAAU,CAACC,GAAG,CAAC,GAAG,IAAI,CAACG,OAAO,GAAGD,QAAQ,EAAE,CAAC;EAC1D;EAEUE,QAAQ,CAACF,QAAgB,EAAEG,KAAS;IAC5C,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,GAAGD,QAAQ,EAAE,EAAEG,KAAK,CAAC;EAClE;EAEUE,OAAO,CAACL,QAAgB,EAAEG,KAAS;IAC3C,OAAO,IAAI,CAACN,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,GAAGD,QAAQ,EAAE,EAAEG,KAAK,CAAC;EACjE;EAEUI,UAAU,CAACP,QAAgB;IACnC,OAAO,IAAI,CAACH,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACP,OAAO,GAAGD,QAAQ,EAAE,CAAC;EAC7D;;AA3BWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["HttpClient","HttpBaseService","constructor","injector","undefined","Error","httpClient","get","httpGet","endpoint","apiBase","httpPost","dados","post","httpPut","put","httpDelete","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\Cursos\\Frontend\\Angular\\Udemy\\minhas-financas\\src\\app\\shared\\base\\http-base.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpBaseService {\n\n  private readonly httpClient!: HttpClient;\n\n  private apiBase = 'http://localhost:3000/';\n  \n  constructor(protected readonly injector: Injector) { \n    if (injector == null || injector == undefined) {\n      throw new Error('Injector não pode ser nulo.')\n    }\n    this.httpClient = injector.get(HttpClient);\n  }\n\n  protected httpGet(endpoint: string): Observable<any> {\n    return this.httpClient.get(`${this.apiBase}${endpoint}`);\n  }\n\n  protected httpPost(endpoint: string, dados:any): Observable<any> {\n    return this.httpClient.post(`${this.apiBase}${endpoint}`, dados);\n  }\n\n  protected httpPut(endpoint: string, dados:any): Observable<any> {\n    return this.httpClient.put(`${this.apiBase}${endpoint}`, dados);\n  }\n\n  protected httpDelete(endpoint: string): Observable<any> {\n    return this.httpClient.delete(`${this.apiBase}${endpoint}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}